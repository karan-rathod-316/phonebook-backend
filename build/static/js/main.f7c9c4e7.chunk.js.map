{"version":3,"sources":["components/DisplayContacts.js","components/ContactForm.js","components/SearchContacts.js","services/contactsServices.js","components/Notifications.js","App.js","index.js"],"names":["DisplayContacts","contacts","deleteContactHandler","map","contact","name","number","value","id","onClick","ContactForm","addContactHandler","newName","nameInputHandler","newNumber","numberInputHandler","onSubmit","onChange","type","SearchContacts","searchInput","searchInputHandler","searchResult","result","baseUrl","contactsServices","getAll","axios","get","then","res","data","addContact","post","deleteContact","delete","updateContact","updatedContact","put","Notifications","notificationMessage","notificationClass","className","App","useState","setContacts","useEffect","setSearchInput","setNewName","setNewNumber","notification","setNotification","filter","toLowerCase","includes","e","target","preventDefault","contactExistsWithSameNumber","find","contactExistsWithDifferentNumber","undefined","alert","contactToUpdate","window","confirm","response","catch","err","setTimeout","concat","toBeDeletedId","toBeDeleted","updatedContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAEe,SAASA,EAAT,GAA8D,IAAnCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,qBAClD,OACE,gCACE,yCACCD,EAASE,KAAI,SAACC,GAAD,OACZ,8BACGA,EAAQC,KADX,IACkBD,EAAQE,OACxB,wBAAQC,MAAOH,EAAQI,GAAIC,QAASP,EAApC,sBAFME,EAAQC,YCLT,SAASK,EAAT,GAMX,IALFC,EAKC,EALDA,kBACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,iBACAC,EAEC,EAFDA,UACAC,EACC,EADDA,mBAEA,OACE,gCACE,kDACA,uBAAMC,SAAUL,EAAhB,UACE,yCACQ,uBAAOJ,MAAOK,EAASK,SAAUJ,OAEzC,2CACU,uBAAON,MAAOO,EAAWG,SAAUF,OAE7C,8BACE,wBAAQG,KAAK,SAAb,yBClBK,SAASC,EAAT,GAIX,IAHFC,EAGC,EAHDA,YACAC,EAEC,EAFDA,mBACAC,EACC,EADDA,aAEA,OACE,oDAEE,uBAAOf,MAAOa,EAAaH,SAAUI,IACpCD,GACCE,EAAanB,KAAI,SAACoB,GAAD,OACf,8BACGA,EAAOlB,KADV,IACiBkB,EAAOjB,SADhBiB,EAAOlB,Y,oBCXnBmB,EAAU,8DAuBDC,EAFQ,CAAEC,OAnBV,WAEb,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAACC,GAAD,OAASA,EAAIC,SAiBFC,WAdd,SAAC5B,GAElB,OADgBuB,IAAMM,KAAKT,EAASpB,GACrByB,MAAK,SAACC,GAAD,OAASA,EAAIC,SAYUG,cATvB,SAAC1B,GACrBmB,IAAMQ,OAAN,UAAgBX,EAAhB,YAA2BhB,KAQ+B4B,cALtC,SAAC5B,EAAI6B,GAEzB,OADcV,IAAMW,IAAN,UAAad,EAAb,YAAwBhB,GAAM6B,GAC7BR,MAAK,SAACC,GAAD,OAASA,EAAIC,UClBpB,SAASQ,EAAT,GAGX,IAFFC,EAEC,EAFDA,oBACAC,EACC,EADDA,kBAEA,OAAO,mBAAGC,UAAWD,EAAd,SAAkCD,IC4L5BG,MA1Lf,WAEE,MAAgCC,mBAAS,IAAzC,mBAAO3C,EAAP,KAAiB4C,EAAjB,KAEAC,qBAAU,WACRrB,EAAiBC,SAASG,MAAK,SAACC,GAC9Be,EAAYf,QAEb,IAEH,MAAsCc,mBAAS,IAA/C,mBAAOxB,EAAP,KAAoB2B,EAApB,KACA,EAA8BH,mBAAS,IAAvC,mBAAOhC,EAAP,KAAgBoC,EAAhB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAO9B,EAAP,KAAkBmC,EAAlB,KACA,EAAwCL,mBAAS,CAC/CJ,oBAAqB,KACrBC,kBAAmB,OAFrB,mBAAOS,EAAP,KAAqBC,EAArB,KAUM7B,EAAerB,EAASmD,QAAO,SAAChD,GAAD,OACnCA,EAAQC,KAAKgD,cAAcC,SAASlC,EAAYiC,kBAqIlD,OACE,gCACE,2CACA,cAACd,EAAD,CACEC,oBAAqBU,EAAaV,oBAClCC,kBAAmBS,EAAaT,oBAElC,cAACtB,EAAD,CACEC,YAAaA,EACbC,mBAnJqB,SAACkC,GAC1BR,EAAeQ,EAAEC,OAAOjD,QAmJpBe,aAAcA,IAGhB,cAACZ,EAAD,CACEC,kBAxIoB,SAAC4C,GACzBA,EAAEE,iBAEF,IAAMC,EAA8BzD,EAAS0D,MAC3C,SAACvD,GAAD,OACEA,EAAQC,KAAKgD,gBAAkBzC,EAAQyC,eACvCjD,EAAQE,SAAWQ,KAGjB8C,EAAmC3D,EAAS0D,MAChD,SAACvD,GAAD,OACEA,EAAQC,KAAKgD,gBAAkBzC,EAAQyC,eACvCjD,EAAQE,SAAWQ,KAGvB,QAAoC+C,IAAhCH,EACF,OAAOI,MAAM,GAAD,OAAIlD,EAAJ,uCACP,QAAyCiD,IAArCD,EAAgD,CACzD,IAAIG,EAAkB9D,EAAS0D,MAC7B,SAACvD,GAAD,OAAaA,EAAQC,KAAKgD,gBAAkBzC,EAAQyC,iBAG3BW,OAAOC,QAAP,UACtBF,EAAgB1D,KADM,iFAKzBoB,EACGW,cAAc2B,EAAgBvD,GAAI,CACjCH,KAAMO,EACNN,OAAQQ,IAETe,MAAK,SAACC,GACL7B,EAASE,KAAI,SAACC,GACZ,OAAOA,EAAQI,KAAOuD,EAAgBvD,GAAKJ,EAAU0B,QAGxDD,MAAK,WACJJ,EAAiBC,SAASG,MAAK,SAACqC,GAAD,OAAcrB,EAAYqB,SAE1DC,OAAM,SAACC,GACNjB,EAAgB,CACdX,oBAAoB,kBAAD,OAAoB5B,EAApB,6CACnB6B,kBAAmB,UAGrB4B,YACE,kBACElB,EAAgB,CACdX,oBAAqB,KACrBC,kBAAmB,SAEvB,QAKNU,EAAgB,CACdX,oBAAoB,WAAD,OAAa5B,GAChC6B,kBAAmB,uBAGrB4B,YACE,kBACElB,EAAgB,CACdX,oBAAqB,KACrBC,kBAAmB,SAEvB,WAIJhB,EACGO,WAAW,CAAE3B,KAAMO,EAASN,OAAQQ,IACpCe,MAAK,SAACC,GAAD,OAASe,EAAY5C,EAASqE,OAAOxC,OAE7CqB,EAAgB,CACdX,oBAAoB,SAAD,OAAW5B,GAC9B6B,kBAAmB,sBAGrB4B,YACE,kBACElB,EAAgB,CACdX,oBAAqB,KACrBC,kBAAmB,SAEvB,MAkDA7B,QAASA,EACTC,iBA9ImB,SAAC0C,GACxBP,EAAWO,EAAEC,OAAOjD,QA8IhBO,UAAWA,EACXC,mBApJqB,SAACwC,GAC1BN,EAAaM,EAAEC,OAAOjD,UAsJpB,cAACP,EAAD,CACEC,SAAUA,EACVC,qBArDuB,SAACqD,GAC5B,IAAMgB,GAAiBhB,EAAEC,OAAOjD,MAC1BiE,EAAcvE,EAAS0D,MAC3B,SAACvD,GAAD,OAAaA,EAAQI,KAAO+D,KAK9B,GAFmBP,OAAOC,QAAP,iBAAyBO,EAAYnE,KAArC,OAED,CAChBoB,EAAiBS,cAAcqC,GAC/B,IAAIE,EAAkBxE,EAASmD,QAC7B,SAAChD,GAAD,OAAaA,EAAQI,KAAO+D,KAE9B1B,EAAY4B,GACZtB,EAAgB,CACdX,oBAAoB,WAAD,OAAagC,EAAYnE,MAC5CoC,kBAAmB,uBAGrB4B,YACE,kBACElB,EAAgB,CACdX,oBAAqB,KACrBC,kBAAmB,SAEvB,a,MC5JRiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f7c9c4e7.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function DisplayContacts({ contacts, deleteContactHandler }) {\n  return (\n    <div>\n      <h2>Numbers</h2>\n      {contacts.map((contact) => (\n        <p key={contact.name}>\n          {contact.name} {contact.number}\n          <button value={contact.id} onClick={deleteContactHandler}>\n            Delete\n          </button>\n        </p>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function ContactForm({\n  addContactHandler,\n  newName,\n  nameInputHandler,\n  newNumber,\n  numberInputHandler,\n}) {\n  return (\n    <div>\n      <h2>Add a new number</h2>\n      <form onSubmit={addContactHandler}>\n        <div>\n          name: <input value={newName} onChange={nameInputHandler} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={numberInputHandler} />\n        </div>\n        <div>\n          <button type=\"submit\">Add</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function SearchContacts({\n  searchInput,\n  searchInputHandler,\n  searchResult,\n}) {\n  return (\n    <div>\n      Filter shown with\n      <input value={searchInput} onChange={searchInputHandler} />\n      {searchInput &&\n        searchResult.map((result) => (\n          <p key={result.name}>\n            {result.name} {result.number}\n          </p>\n        ))}\n    </div>\n  );\n}\n","import axios from \"axios\";\n\nconst baseUrl = \"https://limitless-savannah-10535.herokuapp.com/api/contacts\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((res) => res.data);\n};\n\nconst addContact = (contact) => {\n  const request = axios.post(baseUrl, contact);\n  return request.then((res) => res.data);\n};\n\nconst deleteContact = (id) => {\n  axios.delete(`${baseUrl}/${id}`);\n};\n\nconst updateContact = (id, updatedContact) => {\n  let request = axios.put(`${baseUrl}/${id}`, updatedContact);\n  return request.then((res) => res.data);\n};\n\nlet contactsServices = { getAll, addContact, deleteContact, updateContact };\n\nexport default contactsServices;\n","import React from \"react\";\n\nexport default function Notifications({\n  notificationMessage,\n  notificationClass,\n}) {\n  return <p className={notificationClass}>{notificationMessage}</p>;\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport DisplayContacts from \"./components/DisplayContacts\";\nimport ContactForm from \"./components/ContactForm\";\nimport SearchContacts from \"./components/SearchContacts\";\nimport contactsServices from \"./services/contactsServices\";\nimport Notifications from \"./components/Notifications\";\n\nfunction App() {\n  // state management\n  const [contacts, setContacts] = useState([]);\n\n  useEffect(() => {\n    contactsServices.getAll().then((res) => {\n      setContacts(res);\n    });\n  }, []);\n\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [notification, setNotification] = useState({\n    notificationMessage: null,\n    notificationClass: null,\n  });\n\n  // event handlers\n  const searchInputHandler = (e) => {\n    setSearchInput(e.target.value);\n  };\n\n  const searchResult = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(searchInput.toLowerCase())\n  );\n\n  const numberInputHandler = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const nameInputHandler = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const addContactHandler = (e) => {\n    e.preventDefault();\n\n    const contactExistsWithSameNumber = contacts.find(\n      (contact) =>\n        contact.name.toLowerCase() === newName.toLowerCase() &&\n        contact.number === newNumber\n    );\n\n    const contactExistsWithDifferentNumber = contacts.find(\n      (contact) =>\n        contact.name.toLowerCase() === newName.toLowerCase() &&\n        contact.number !== newNumber\n    );\n\n    if (contactExistsWithSameNumber !== undefined) {\n      return alert(`${newName} is already added to the phonebook`);\n    } else if (contactExistsWithDifferentNumber !== undefined) {\n      let contactToUpdate = contacts.find(\n        (contact) => contact.name.toLowerCase() === newName.toLowerCase()\n      );\n\n      let confirmationToUpdate = window.confirm(\n        `${contactToUpdate.name} is already added to the phonebook, replace the old number with a new one?`\n      );\n\n      if (confirmationToUpdate) {\n        contactsServices\n          .updateContact(contactToUpdate.id, {\n            name: newName,\n            number: newNumber,\n          })\n          .then((res) => {\n            contacts.map((contact) => {\n              return contact.id !== contactToUpdate.id ? contact : res;\n            });\n          })\n          .then(() => {\n            contactsServices.getAll().then((response) => setContacts(response));\n          })\n          .catch((err) => {\n            setNotification({\n              notificationMessage: `Information of ${newName} has already been removed from the server`,\n              notificationClass: \"error\",\n            });\n\n            setTimeout(\n              () =>\n                setNotification({\n                  notificationMessage: null,\n                  notificationClass: null,\n                }),\n              5000\n            );\n            return;\n          });\n\n        setNotification({\n          notificationMessage: `Updated ${newName}`,\n          notificationClass: \"updateNotification\",\n        });\n\n        setTimeout(\n          () =>\n            setNotification({\n              notificationMessage: null,\n              notificationClass: null,\n            }),\n          5000\n        );\n      }\n    } else {\n      contactsServices\n        .addContact({ name: newName, number: newNumber })\n        .then((res) => setContacts(contacts.concat(res)));\n\n      setNotification({\n        notificationMessage: `Added ${newName}`,\n        notificationClass: \"addedNotification\",\n      });\n\n      setTimeout(\n        () =>\n          setNotification({\n            notificationMessage: null,\n            notificationClass: null,\n          }),\n        5000\n      );\n    }\n  };\n\n  const deleteContactHandler = (e) => {\n    const toBeDeletedId = +e.target.value;\n    const toBeDeleted = contacts.find(\n      (contact) => contact.id === toBeDeletedId\n    );\n\n    let confirmation = window.confirm(`Delete ${toBeDeleted.name} ?`);\n\n    if (confirmation) {\n      contactsServices.deleteContact(toBeDeletedId);\n      let updatedContacts = contacts.filter(\n        (contact) => contact.id !== toBeDeletedId\n      );\n      setContacts(updatedContacts);\n      setNotification({\n        notificationMessage: `Deleted ${toBeDeleted.name}`,\n        notificationClass: \"deleteNotification\",\n      });\n\n      setTimeout(\n        () =>\n          setNotification({\n            notificationMessage: null,\n            notificationClass: null,\n          }),\n        5000\n      );\n    }\n  };\n\n  return (\n    <div>\n      <h1>PhoneBook</h1>\n      <Notifications\n        notificationMessage={notification.notificationMessage}\n        notificationClass={notification.notificationClass}\n      />\n      <SearchContacts\n        searchInput={searchInput}\n        searchInputHandler={searchInputHandler}\n        searchResult={searchResult}\n      />\n\n      <ContactForm\n        addContactHandler={addContactHandler}\n        newName={newName}\n        nameInputHandler={nameInputHandler}\n        newNumber={newNumber}\n        numberInputHandler={numberInputHandler}\n      />\n\n      <DisplayContacts\n        contacts={contacts}\n        deleteContactHandler={deleteContactHandler}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}